{"version":3,"sources":["utils/foreach.js","query.js","interface.js","index.js"],"names":["forEachIterable","iterable","cb","i","length","forEachObject","object","Object","keys","key","module","exports","forEach","element","require","escapeField","field","replace","Query","constructor","table","fields","values","type","whereFields","joinFields","params","matchedField","match","matchedFieldPoint","from","select","escapeFieldAux","arguments","push","Array","isArray","f","as","allWhere","args","newWhere","call","whereString","operator","value","andWhere","orWhere","whereIn","where","apply","whereNull","orWhereNull","whereRaw","str","internalJoin","field1","field2","innerJoin","leftJoin","leftOuterJoin","rightJoin","rightOuterJoin","fullOuterJoin","crossJoin","joinRaw","clearSelect","insert","obj","arr","item","indexOf","index","row","del","toSelect","join","toInsert","map","v","toDelete","toUpdate","toSQL","sql","bindings","toQuery","query","n","toString","execute","client","pool","connect","res","rows","release","Interface","then","resolve","reject","catch","Knex","config","Pool","connection"],"mappings":"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","file":"index.js","sourceRoot":"..\\..\\src","sourcesContent":["function forEachIterable (iterable, cb) {\r\n  for (let i = 0, length = iterable.length; i < length; i++) {\r\n    cb(iterable[i], i)\r\n  }\r\n}\r\n\r\nfunction forEachObject (object, cb) {\r\n  forEachIterable(Object.keys(object), key => {\r\n    cb(object[key], key)\r\n  })\r\n}\r\n\r\n/**\r\n * forEach\r\n *\r\n * @callback iterableCallback\r\n * @param {*} item - Value of each element\r\n * @param {(number|string)} key - If 'element' is iterable then returns number, else string\r\n *\r\n * @param {(*[]|Object|string)} element\r\n * @param {iterableCallback} cb - The callback of each iteration\r\n */\r\nmodule.exports = function forEach (element, cb) {\r\n  if (element === null || element === void 0) {\r\n    return void 0\r\n  }\r\n  if (element.length !== void 0) {\r\n    forEachIterable(element, cb)\r\n  } else if (typeof element === 'object') {\r\n    forEachObject(element, cb)\r\n  }\r\n}","const forEach = require('@utils/foreach')\r\n\r\nfunction escapeField (field) {\r\n  return '\"' + field.replace(/\"/g, '\"\"') + '\"'\r\n}\r\n\r\nexport default class Query {\r\n  constructor (table) {\r\n    this.table = table\r\n    this.fields = []\r\n    this.values = []\r\n    this.type = 'SELECT'\r\n    this.whereFields = []\r\n    this.joinFields = []\r\n    this.params = []\r\n  }\r\n\r\n  static escapeField (field) {\r\n    if (field === '*') return field\r\n    const matchedField = field.match(/([a-z0-9]+) as ([a-z0-9]+)/i)\r\n    if (matchedField) {\r\n      return `${escapeField(matchedField[1])} AS ${escapeField(matchedField[2])}`\r\n    } else {\r\n      const matchedFieldPoint = field.match(/([a-z0-9]+)\\.([a-z0-9]+)/i)\r\n      if (matchedFieldPoint) {\r\n        return `${escapeField(matchedFieldPoint[1])}.${escapeField(matchedFieldPoint[2])}`\r\n      }\r\n    }\r\n    return escapeField(field)\r\n  }\r\n\r\n  from (table) {\r\n    this.table = table\r\n    return this\r\n  }\r\n\r\n  select () {\r\n    const escapeFieldAux = this.constructor.escapeField\r\n    forEach(arguments, field => {\r\n      if (field === null || field === void 0) {\r\n        return void 0\r\n      }\r\n      if (typeof field === 'string') {\r\n        this.fields.push(escapeFieldAux(field))\r\n      } else if (Array.isArray(field)) {\r\n        forEach(field, f => {\r\n          this.fields.push(escapeFieldAux(f))\r\n        })\r\n      } else if (typeof field === 'object') {\r\n        forEach(field, (f, as) => {\r\n          this.fields.push(escapeFieldAux(`${f} AS ${as}`))\r\n        })\r\n      }\r\n    })\r\n    return this\r\n  }\r\n\r\n  allWhere (type, args) {\r\n    if (args.length === 1 && typeof args[0] === 'function') {\r\n      const newWhere = new Query()\r\n      newWhere.params = this.params\r\n      args[0].call(newWhere)\r\n      this.whereFields.push([type, `(${newWhere.whereString()})`])\r\n    } else {\r\n      const field = args[0]\r\n      let operator, value\r\n      if (args.length === 2) {\r\n        operator = '='\r\n        value = args[1]\r\n      } else if (args.length === 3) {\r\n        operator = args[1]\r\n        value = args[2]\r\n      }\r\n\r\n      if (operator) {\r\n        this.params.push(value)\r\n        this.whereFields.push([type, `${this.constructor.escapeField(field)} ${operator} $${this.params.length}`])\r\n      }\r\n    }\r\n  }\r\n\r\n  andWhere () {\r\n    this.allWhere('AND', arguments)\r\n    return this\r\n  }\r\n\r\n  orWhere () {\r\n    this.allWhere('OR', arguments)\r\n    return this\r\n  }\r\n\r\n  whereIn () {\r\n    // TODO: Validate\r\n    this.allWhere('AND', [arguments[0], 'IN', arguments[1]])\r\n  }\r\n\r\n  where () {\r\n    return this.andWhere.apply(this, arguments)\r\n  }\r\n\r\n  whereNull (field) {\r\n    this.whereFields.push(['AND', `${this.constructor.escapeField(field)} IS NULL`])\r\n    return this\r\n  }\r\n\r\n  orWhereNull (field) {\r\n    this.whereFields.push(['OR', `${this.constructor.escapeField(field)} IS NULL`])\r\n    return this\r\n  }\r\n\r\n  whereRaw (str) {\r\n    this.whereFields.push(['AND', str])\r\n    return this\r\n  }\r\n\r\n  whereString () {\r\n    // Internal\r\n    let str = ''\r\n    if (this.whereFields.length) {\r\n      forEach(this.whereFields, ([type, where], i) => {\r\n        if (i === 0) {\r\n          str += where\r\n        } else {\r\n          str += ` ${type} ${where}`\r\n        }\r\n      })\r\n    }\r\n    return str\r\n  }\r\n\r\n  internalJoin (type, table, field1, field2) {\r\n    this.joinFields.push(`${type} JOIN ${this.constructor.escapeField(table)} ON ${this.constructor.escapeField(field1)} = ${this.constructor.escapeField(field2)}`)\r\n  }\r\n\r\n  innerJoin (table, field1, field2) {\r\n    this.internalJoin('INNER', table, field1, field2)\r\n    return this\r\n  }\r\n\r\n  leftJoin (table, field1, field2) {\r\n    this.internalJoin('LEFT', table, field1, field2)\r\n    return this\r\n  }\r\n\r\n  leftOuterJoin (table, field1, field2) {\r\n    this.internalJoin('LEFT OUTER', table, field1, field2)\r\n    return this\r\n  }\r\n\r\n  rightJoin (table, field1, field2) {\r\n    this.internalJoin('RIGHT', table, field1, field2)\r\n    return this\r\n  }\r\n\r\n  rightOuterJoin (table, field1, field2) {\r\n    this.internalJoin('RIGHT OUTER', table, field1, field2)\r\n    return this\r\n  }\r\n\r\n  fullOuterJoin (table, field1, field2) {\r\n    this.internalJoin('FULL OUTER', table, field1, field2)\r\n    return this\r\n  }\r\n\r\n  crossJoin (table, field1, field2) {\r\n    this.internalJoin('CROSS', table, field1, field2)\r\n    return this\r\n  }\r\n\r\n  joinRaw (str) {\r\n    this.joinFields.push(str)\r\n    return this\r\n  }\r\n\r\n  clearSelect () {\r\n    this.fields = []\r\n    return this\r\n  }\r\n\r\n  insert (obj) {\r\n    this.type = 'INSERT'\r\n    this.fields = []\r\n    this.values = []\r\n    this.params = []\r\n    let arr\r\n    if (Array.isArray(obj)) {\r\n      arr = obj\r\n    } else {\r\n      arr = [obj]\r\n    }\r\n    forEach(arr, item => {\r\n      forEach(item, (value, key) => {\r\n        if (this.fields.indexOf(key) === -1) {\r\n          this.fields.push(key)\r\n        }\r\n      })\r\n    })\r\n    forEach(arr, (item, index) => {\r\n      const row = []\r\n      forEach(this.fields, field => {\r\n        this.params.push(item[field])\r\n        row.push('$' + (index * this.fields.length + row.length + 1))\r\n      })\r\n      this.values.push(row)\r\n    })\r\n    return this\r\n  }\r\n\r\n  del () {\r\n    this.type = 'DELETE'\r\n    return this\r\n  }\r\n\r\n  toSelect () {\r\n    const fields = this.fields.length ? this.fields.join(', ') : '*'\r\n\r\n    let str = `SELECT ${fields} FROM ${this.constructor.escapeField(this.table)}`\r\n    if (this.joinFields.length) {\r\n      str += ' ' + this.joinFields.join(' ')\r\n    }\r\n    const whereString = this.whereString()\r\n    if (whereString) {\r\n      str += ' WHERE ' + whereString\r\n    }\r\n\r\n    return str\r\n  }\r\n\r\n  toInsert () {\r\n    const escapeFieldAux = this.constructor.escapeField\r\n    let str = `INSERT INTO ${escapeFieldAux(this.table)}`\r\n    if (this.fields.length) {\r\n      str += ` (${this.fields.map(v => escapeFieldAux(v)).join(', ')})`\r\n    }\r\n    if (this.values.length) {\r\n      str += ' VALUES '\r\n      str += this.values.map(v => `(${v.join(', ')})`).join(', ')\r\n    }\r\n    return str\r\n  }\r\n\r\n  toDelete () {\r\n    let str = `DELETE FROM ${this.constructor.escapeField(this.table)}`\r\n    if (this.whereFields.length) {\r\n      str += ' WHERE '\r\n      forEach(this.whereFields, ([type, where], i) => {\r\n        if (i === 0) {\r\n          str += where\r\n        } else {\r\n          str += ` ${type} ${where}`\r\n        }\r\n      })\r\n    }\r\n\r\n    return str\r\n  }\r\n\r\n  toUpdate () {\r\n    // ...\r\n  }\r\n\r\n  toSQL () {\r\n    if (this.type === 'INSERT') {\r\n      return {\r\n        sql: this.toInsert(),\r\n        bindings: this.params\r\n      }\r\n    } else if (this.type === 'SELECT') {\r\n      return {\r\n        sql: this.toSelect(),\r\n        bindings: this.params\r\n      }\r\n    } else if (this.type === 'DELETE') {\r\n      return {\r\n        sql: this.toDelete(),\r\n        bindings: this.params\r\n      }\r\n    }\r\n  }\r\n\r\n  toQuery () {\r\n    const query = this.toSQL()\r\n    return query.sql.replace(/\\$[0-9]+/g, (n, index) => {\r\n      return query.bindings[index]\r\n    })\r\n  }\r\n\r\n  toString () {\r\n    return this.toQuery()\r\n  }\r\n}","import Query from './query'\r\n\r\nasync function execute () {\r\n  const client = await this.pool.connect()\r\n  try {\r\n    const query = this.toSQL()\r\n    const res = await client.query(query.sql, query.bindings)\r\n    return res.rows\r\n  } finally {\r\n    await client.release()\r\n  }\r\n}\r\n\r\n/* function execute () {\r\n    return this.pool.connect().then(client => {\r\n        return client.query(this.toString())\r\n        .then(res => res.rows)\r\n        .finally(() => {\r\n            client.release()\r\n        })\r\n    })\r\n} */\r\n\r\nexport default class Interface extends Query {\r\n  constructor (pool, table) {\r\n    super(table)\r\n    this.pool = pool\r\n  }\r\n\r\n  /* #execute () {\r\n\r\n  } */\r\n\r\n  then (resolve, reject) {\r\n    return execute.call(this).then(resolve, reject)\r\n  }\r\n\r\n  catch (reject) {\r\n    return execute.call(this).catch(reject)\r\n  }\r\n}","import Interface from './interface'\r\n\r\nmodule.exports = function Knex (config) {\r\n  const { Pool } = require('pg')\r\n  const pool = new Pool(config.connection)\r\n\r\n  return function (table) {\r\n    return new Interface(pool, table)\r\n  }\r\n}"]}